{"version":3,"sources":["../src/events.js"],"names":["EventTube","address","cb","timeout","_address","_cb","_timeout","timer","connect","me","setTimeout","console","log","ws","WebSocket","onerror","evt","message","reconnect","onmessage","m","onopen","onclose","module","exports"],"mappings":";;AAAA;;;;;;;;;;IAEMA,S;;;AACF;;;;;;AAMA,qBAAYC,OAAZ,EAAqBC,EAArB,EAAyBC,OAAzB,EAAkC;AAAA;;AAC9B,SAAKC,QAAL,GAAgBH,OAAhB;AACA,SAAKI,GAAL,GAAWH,EAAX;AACA,SAAKI,QAAL,GAAgBH,WAAW,IAA3B;AACA,SAAKI,KAAL,GAAa,IAAb;AACA,SAAKC,OAAL;AACH;;;;gCACU;AACP,UAAIC,KAAK,IAAT;AACA,UAAIN,UAAUM,GAAGH,QAAjB;;AACA,UAAG,CAACG,GAAGF,KAAP,EAAa;AACTE,WAAGF,KAAH,GAAWG,WAAW,YAAW;AAC7BD,aAAGD,OAAH;AACD,SAFQ,EAENL,OAFM,CAAX;AAGH;AACJ;;;8BACS;AACN,UAAIM,KAAK,IAAT;AACAA,SAAGF,KAAH,GAAW,IAAX;AACAI,cAAQC,GAAR,CAAY,gBAAcH,GAAGL,QAA7B;AACA,UAAIS,EAAJ;AACAA,WAAK,IAAIC,WAAJ,CAAcL,GAAGL,QAAjB,CAAL;;AACAS,SAAGE,OAAH,GAAW,UAASC,GAAT,EAAc;AACrBL,gBAAQC,GAAR,CAAY,WAASI,IAAIC,OAAzB;AACAR,WAAGS,SAAH;AACH,OAHD;;AAIAL,SAAGM,SAAH,GAAe,UAAUC,CAAV,EAAa;AACxBX,WAAGJ,GAAH,CAAOe,CAAP;AACH,OAFD;;AAGAP,SAAGQ,MAAH,GAAU,YAAW;AACjBV,gBAAQC,GAAR,CAAY,WAAZ;AACH,OAFD;;AAGAC,SAAGS,OAAH,GAAW,YAAW;AAClBX,gBAAQC,GAAR,CAAY,cAAZ;AACAH,WAAGS,SAAH;AACH,OAHD;AAIH;;;;;;AAELK,OAAOC,OAAP,GAAiBxB,SAAjB","sourcesContent":["import WebSocket from 'ws';\n\nclass EventTube {\n    /**\n     * \n     * @param {*} address 服务地址\n     * @param {*} protocols 协议\n     * @param {*} cb 回调函数\n     */\n    constructor(address, cb, timeout) {\n        this._address = address;\n        this._cb = cb;\n        this._timeout = timeout || 5000;\n        this.timer = null;\n        this.connect();\n    }\n    reconnect(){\n        var me = this;\n        var timeout = me._timeout;\n        if(!me.timer){\n            me.timer = setTimeout(function() {\n                me.connect();\n              }, timeout);    \n        }\n    }\n    connect() {\n        var me = this;\n        me.timer = null;\n        console.log('connecting '+me._address);\n        var ws;        \n        ws = new WebSocket(me._address);        \n        ws.onerror=function(evt) {\n            console.log('error:'+evt.message);\n            me.reconnect();\n        };\n        ws.onmessage = function (m) {\n            me._cb(m);\n        }\n        ws.onopen=function() {\n            console.log('connected');\n        };\n        ws.onclose=function() {\n            console.log('disconnected');\n            me.reconnect();\n        };\n    }\n}\nmodule.exports = EventTube;"],"file":"events.js"}